print("hello, python")

"""
1.자료형이란? 
 1-1.자료(data) : 프로그램이 처리할 수 있는 모든 것
 1-2.자료형(datatype) : 자료를 기능과 역할에 따라 구분된 종류

2.자료형의 종류
 2-1.기본 자료형(자료에 대한 타입) : 숫자, 문자열, 불, none
 2-2.복합 자료형(어떤 값을 담는 자료구조) : 변수, 리스트, 딕셔너리, 튜플, 집합

3.숫자 자료형
 3-1.정수형(integer) : 0, 1, 273, -52
 3-2.실수형(floating point) : 0.0, 52.273, -1,2
 3-3.숫자 연산자
  1).사칙 연산자 : 덧셈(+), 뺄셈(-), 곱셈(*), 나눗셈(/) 연산자가 있다.
  2).정수 나누기 연산자(//) : 숫자를 나누고 소수점 이하의 자릿수를 떼어 버린 후 정수(몫) 부분만 남김
  3).나머지 연산자(%) : A를 B로 나누었을 때 남은 나머지를 구함
  4).제곱 연산자(**) : 숫자를 제곱함
"""
print("사칙 연산자 결과 출력하기")
print("5 + 7의 덧셈 연자산 결과는", 5 + 7)
print("5 - 7의 뺄셈 연자산 결과는", 5 - 7)
print("5 * 7의 곱셈 연자산 결과는", 5 * 7)
print("5 / 7의 나눗셈 연자산 결과는", 5 / 7) # 나눗셈의 결과가 실수로 나온다.
print()

print("정수 나누기, 나머지, 제곱 연산자 결과 출력하기")
print("5 // 7의 정수 나누기 연자산 결과는", 5 // 7)
print("5 % 7의 나머지 연자산 결과는", 5 % 7)
print("5 ** 2의 제곱 연자산 결과는", 5 ** 2)
print()

"""
4.문자열 자료형
 1-1.문자열(string) : print("hello, python")에서 "hello, python"처럼 따옴표로 감싸 입력한 것 
 1-2.문자열에 따옴표 포함시키기
  -큰따옴표로 안에 작은따옴표 넣기
  -작은따옴표안에 큰따옴표 넣기
  -이스케이프 문자활용(\)를 이용하여 따옴표 이용하기 
"""
print("문자열에 따옴표 포함시키기")
print("큰따옴표 안에 '작은따옴표' 넣기")
print('작은따옴표 안에 "큰따옴표" 넣기')
print("이스케이프 문자를 이용한 큰따옴표 안에 \'작은따옴표\' 넣기")
print('이스케이프 문자를 이용한 작은따옴표 안에 \"큰따옴표\" 넣기')
print()

"""
1-3.여러 줄 문자열 만들기
  -여러 줄 문자열은 큰따옴표나 작은따옴표를 세 번 사용한다.
"""
print("여러 줄 문자열 만들기 1번째 자동으로 \n을 한거 처럼 줄바꿈이 일어난다.")
print("""동해물과 백두산이 마르고 닳도록
하나님이 보우하사 우리나라 만세
무궁화 삼천리 화려강산 대한사람
대한으로 길이 보전하세""")
print()
print("여러 줄 문자열 만들기 2번째 방법 첫 번째와 마지막에 줄바꿈이 일어난다.")
print(""" 
동해물과 백두산이 마르고 닳도록
하나님이 보우하사 우리나라 만세
무궁화 삼천리 화려강산 대한사람
대한으로 길이 보전하세
""")
print()
print("여러 줄 문자열 만들기 2번째 방법 첫 번째와 마지막에 \를 사용하여 해결")
print("""\
동해물과 백두산이 마르고 닳도록
하나님이 보우하사 우리나라 만세
무궁화 삼천리 화려강산 대한사람
대한으로 길이 보전하세\
""")
print()

"""
1-4.문자열 연산자
   -문자열 연결 연산자(+) : 두 문자열을 연결해서 새로운 문자열을 만든다. 두 문자열이 붙여쓰기가 됨
   -문자열 반복 연산자(*) : 문자열 * 숫자나 숫자 * 문자를 이용하여 문자열을 반복한다.
"""
print("문자열 연결 연산자(+)") #두 문자열이 붙여쓰기가 됨
print("안녕" + "하세요" + "!")
print("안녕" * 2) # 붙여쓰기가 돼서 반복한다
print()

"""
1-5.문자열 선택 연산자(인덱싱) : [] 
 -파이썬은 숫자를 0부터 세는 제로 인덱스 기반
 - -부호와 숫자를 사용하면 뒤에서 부터 시작한다.
1-6.문자열 범위 선택 연산자(슬라이싱) : [처음:끝:간격]
1-7.문자열 찾기 함수
 -find() : 찾는 글자가 없으면 -1이 출려됨
 -index() : 찾는 글자가 없으면 예외 발생
1-8.문자열 개수 세기 연산자
 -count()
1-9.구분자 넣기
 -"원하는 구분자".join()
1-10.문자열 나누기
 -split()
"""
print("문자열 선택 연산자")
print("안녕하세요"[0])
print("안녕하세요"[1])
print("안녕하세요"[2])
print("안녕하세요"[3])
print("안녕하세요"[4])
print()
print("문자열 선택 연산자 -부호와 숫자")
print("안녕하세요"[-1])
print("안녕하세요"[-2])
print("안녕하세요"[-3])
print("안녕하세요"[-4])
print("안녕하세요"[-5])

print("문자열 찾기 함수 find()") 
print("bigbig".find("i"))
print()
print("문자열 찾기 함수 index()")
print("bigbig".index("i"))
print()
print("문자열 개수 세기 함수 count()") 
print("bigbig".count("i"))
print()
print("문자열에 원하는 구분자 넣기 함수 \"원하는 구분자\".join()") 
print(",".join("문자열 구분자 넣기"))
print("*".join('abcd')) 
print()
print("문자열 나누기 함수 split()") 
print("문자열 구분자 넣기".split()) #결과값이 리스트로 반환 됨, 초기 값은 공백

"""
1-11.replace(바뀌게 될 문자열, 바꿀 문자열)처럼 사용해서 문자열 안의 특정한 값을 다른 값으로 치환해 준다.
"""
a = "life is too short"
print(a.replace("life", "reg"))
print(a) # 원래 값은 변하지 않는다. 